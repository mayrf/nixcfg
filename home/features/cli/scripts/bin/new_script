#!/usr/bin/env bash

# Configuration
SCRIPTS_DIR="$HOME/.config/nixcfg/home/features/cli/scripts/bin"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored messages
print_error() {
    echo -e "${RED}Error: $1${NC}" >&2
}

print_success() {
    echo -e "${GREEN}$1${NC}"
}

print_warning() {
    echo -e "${YELLOW}$1${NC}"
}

# Check if EDITOR is set
if [ -z "$EDITOR" ]; then
    print_error "\$EDITOR environment variable is not set."
    echo "Please set it in your shell configuration (e.g., export EDITOR=vim)"
    exit 1
fi

# Create scripts directory if it doesn't exist
if [ ! -d "$SCRIPTS_DIR" ]; then
    print_warning "Scripts directory does not exist. Creating: $SCRIPTS_DIR"
    mkdir -p "$SCRIPTS_DIR" || {
        print_error "Failed to create scripts directory: $SCRIPTS_DIR"
        exit 1
    }
fi

# Prompt for filename
echo "Enter the script name (without path):"
read -r FILENAME

# Check if filename is empty
if [ -z "$FILENAME" ]; then
    print_error "Filename cannot be empty."
    exit 1
fi

# Validate filename (no whitespace, only alphanumeric, dash, underscore, and dot)
if [[ ! "$FILENAME" =~ ^[a-zA-Z0-9._-]+$ ]]; then
    print_error "Invalid filename. Only alphanumeric characters, dots, dashes, and underscores are allowed."
    exit 1
fi

# Check for whitespace specifically
if [[ "$FILENAME" =~ [[:space:]] ]]; then
    print_error "Filename cannot contain whitespace."
    exit 1
fi

# Construct full path
FILEPATH="$SCRIPTS_DIR/$FILENAME"

# Check if file already exists
if [ -f "$FILEPATH" ]; then
    print_error "File already exists: $FILEPATH"
    read -p "Do you want to open it anyway? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        exec "$EDITOR" "$FILEPATH"
    fi
    exit 1
fi

# Create the file with shebang
echo "#!/usr/bin/env bash" > "$FILEPATH" || {
    print_error "Failed to create file: $FILEPATH"
    exit 1
}

# Add a blank line for convenience
echo "" >> "$FILEPATH"

# Make the file executable
chmod +x "$FILEPATH" || {
    print_error "Failed to make file executable: $FILEPATH"
    exit 1
}

print_success "Script created successfully: $FILEPATH"

# Open in editor
"$EDITOR" "$FILEPATH"

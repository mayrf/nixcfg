# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    # ../common/optional/encrypted-root.nix
  ];


  boot = {
    initrd = {
      # availableKernelModules = [ "ehci_pci" "ahci" "xhci_pci" "sd_mod" "sdhci_pci" ];
      availableKernelModules = [ "ehci_pci" "ahci" "xhci_pci" "sd_mod" "sdhci_pci" "usbhid" "sd_mod" "uas" ];

      kernelModules = [ ];
    };
    kernelModules = [ "kvm-intel" ];
    loader.grub = {
      enable = true;
      configurationLimit = 5;
      # Get disk is via: lsblk -o ID,PATH
      device = "/dev/disk/by-id/wwn-0x5001b444a7c374b6"; # or "nodev" for efi only
      # device = "/dev/sdg"; # or "nodev" for efi only
    };
  };

  # fileSystems."/" = {
  #   device = "/dev/disk/by-label/nixos";
  #   fsType = "ext4";
  # };

  # # boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/f1f42ee9-52e2-4864-8054-928ab332ee70";
  # boot.initrd.luks.devices."crypt".device = "/dev/disk/by-uuid/f7486834-2c0d-495d-805f-96448e768a18";
  # # boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/90e64d47-2f1a-4c61-a584-0b4a0df39c82";


  # fileSystems."/boot" = {
  #   device = "/dev/disk/by-label/boot";
  #   fsType = "vfat";
  #   # fsType = "ext4";
  # };

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/97a40101-3821-4e10-bb59-8087b7afd886";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."crypt".device = "/dev/disk/by-uuid/f7486834-2c0d-495d-805f-96448e768a18";

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/BFBC-D8CE";
      fsType = "vfat";
    };


  swapDevices = [{
    device = "/var/lib/swapfile";
    size = 16 * 1024;
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wwp0s29u1u4i6.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}

# # Do not modify this file!  It was generated by ‘nixos-generate-config’
# # and may be overwritten by future invocations.  Please make changes
# # to /etc/nixos/configuration.nix instead.
# { config, lib, pkgs, modulesPath, ... }:

# {
#   imports =
#     [
#       (modulesPath + "/installer/scan/not-detected.nix")
#     ];

#   boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "uas" "sd_mod" ];
#   boot.initrd.kernelModules = [ ];
#   boot.kernelModules = [ "kvm-amd" ];
#   boot.extraModulePackages = [ ];

#   fileSystems."/" =
#     {
#       device = "/dev/disk/by-uuid/90e64d47-2f1a-4c61-a584-0b4a0df39c82";
#       fsType = "ext4";
#     };

#   boot.initrd.luks.devices."cryptroo".device = "/dev/disk/by-uuid/f1f42ee9-52e2-4864-8054-928ab332ee70";

#   fileSystems."/boot" =
#     {
#       device = "/dev/disk/by-uuid/2ed510cd-9bfa-48b4-aa5f-974619a2c3ce";
#       fsType = "ext4";
#     };

#   swapDevices = [ ];

#   # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
#   # (the default) this is the recommended approach. When using systemd-networkd it's
#   # still possible to use this option, but it's recommended to use it in conjunction
#   # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
#   networking.useDHCP = lib.mkDefault true;
#   # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
#   # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
#   # networking.interfaces.wlp15s0f3u1.useDHCP = lib.mkDefault true;

#   nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
#   hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
# }
